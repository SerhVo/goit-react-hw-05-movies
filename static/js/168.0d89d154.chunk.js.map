{"version":3,"file":"static/js/168.0d89d154.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/Movie-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"review\":\"Reviews_review__sHbuN\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\",\"empty\":\"Reviews_empty__gM9wW\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport movieAPI from 'services/Movie-api';\nimport css from './Reviews.module.css';\n\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n    const [empty, setEmpty] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        movieAPI\n            .fetchReviews(movieId)\n            .then(result => {\n                if (result.results.length > 0) {\n                    setReviews(result.results);\n                } else {\n                    setEmpty(true);\n                }\n            })\n            .catch(error => toast.error(`${error.message}`))\n            .finally(() => { setLoading(false) });\n    }, [movieId]);\n\n    return (\n        <ul className={css.reviewsList}>\n            {loading && <Loader />}\n\n            {reviews &&\n                reviews.map(review => {\n                    return (\n                        <li className={css.review} key={review.id}>\n                            <h3 className={css.author}> Author: {review.author}</h3>\n                            <p className={css.content}>{review.content}</p>\n                        </li>\n                    );\n                })\n            }\n\n            {empty &&\n                <p className={css.empty}>We don't have any reviews for this movie.</p>\n            }\n        </ul>\n    );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7ea4fffffdd201a1de907203088fcd86';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE_DETAILS = '/movie';\nconst CAST = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nasync function fetchTrending() {\n    try {\n        const fetchUrl = `${BASE_URL}${TRENDING}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data.results;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        throw new Error(error.message);\n    }\n};\n\nasync function fetchMovieDetails(id) {\n    try {\n        const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        throw new Error(error.message);\n    }\n};\n\nasync function fetchCast(id) {\n    try {\n        const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}${CAST}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        throw new Error(error.message);\n    }\n};\n\nasync function fetchReviews(id) {\n    try {\n        const fetchUrl = `${BASE_URL}${MOVIE_DETAILS}/${id}${REVIEWS}?api_key=${API_KEY}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        throw new Error(error.message);\n    }\n};\n\nasync function searchMovies(query) {\n    try {\n        const fetchUrl = `${BASE_URL}${SEARCH}?api_key=${API_KEY}&query=${query}`;\n        const response = await axios.get(fetchUrl);\n\n        if (response) {\n            return response.data;\n        }\n\n        return Promise.reject(\n            new Error('Oops! Something went wrong...')\n        );\n    } catch (error) {\n        throw new Error(error.message);\n    }\n}\n\nconst movieAPI = {\n    fetchTrending,\n    fetchMovieDetails,\n    fetchCast,\n    fetchReviews,\n    searchMovies,\n};\n\nexport default movieAPI;"],"names":["movieId","useParams","useState","reviews","setReviews","empty","setEmpty","loading","setLoading","useEffect","movieAPI","then","result","results","length","catch","error","toast","message","finally","className","css","Loader","map","review","author","content","id","BASE_URL","API_KEY","TRENDING","MOVIE_DETAILS","CAST","REVIEWS","SEARCH","fetchTrending","fetchUrl","axios","response","data","Promise","reject","Error","fetchMovieDetails","fetchCast","fetchReviews","searchMovies","query"],"sourceRoot":""}